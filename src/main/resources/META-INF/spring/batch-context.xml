<?xml version="1.0" encoding="UTF-8"?>
<!-- * Copyright 2002-2013 the original author or authors. * * Licensed under 
	the Apache License, Version 2.0 (the "License"); * you may not use this file 
	except in compliance with the License. * You may obtain a copy of the License 
	at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by 
	applicable law or agreed to in writing, software * distributed under the 
	License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. * See the License for the specific 
	language governing permissions and * limitations under the License. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<bean id="payment"
		class="org.springframework.batch.integration.samples.payments.model.Payment"
		scope="prototype" />

	<batch:job id="importPayments">
		<batch:step id="loadPayments" next="convertPayment">


			<partition step="slave" partitioner="inputPartitioner">
				<handler grid-size="1" task-executor="taskExecutor" />
			</partition>




		</batch:step>

		<batch:step id="convertPayment">
			<batch:tasklet>
				<batch:chunk reader="dbReaders" writer="xmlWriters"
					commit-interval="1">

				</batch:chunk>
				<batch:listeners>
					<batch:listener>
						<bean
							class="org.springframework.batch.integration.samples.payments.PaymentChunkListener" />
					</batch:listener>
				</batch:listeners>

			</batch:tasklet>


		</batch:step>
		<batch:listeners>
			<batch:listener ref="notificationExecutionsListener" />
		</batch:listeners>
	</batch:job>




	<step id="slave" xmlns="http://www.springframework.org/schema/batch">
		<tasklet>
			<chunk reader="itemReader" writer="itemWriter" commit-interval="1" />
		</tasklet>
	</step>



<bean id="inputPartitioner" class="org.springframework.batch.integration.samples.payment.partitioner.FlatFilePartitioner" scope="step">
			<property name="resource" value="file:///#{jobParameters['input.file.name']}" />
			<property name="linesToSkip" value="1" />
		</bean>
		
		
	<bean id="rangePartitioner"
		class="org.springframework.batch.integration.samples.payment.partitioner.RangePartitioner" />

	<bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor" />

	<bean id="itemWriter"
		class="org.springframework.batch.integration.samples.payments.PaymentWriter">
		<constructor-arg name="dataSource" ref="dataSource" />
	</bean>

<!-- 	<bean id="itemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">
		<property name="resource" value="file:///#{jobParameters['input.file.name']}" />
		<property name="linesToSkip" value="1" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="source,destination,amount,date" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.integration.samples.payments.PaymentFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean> -->




<bean id="itemReader" class="org.springframework.batch.integration.samples.payment.file.reader.MultiThreadedFlatFileItemReader" scope="step">
	        <property name="lineMapper">
	           <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="source,destination,amount,date" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.integration.samples.payments.PaymentFieldSetMapper" />
				</property>
			</bean>
	        </property>
	        <property name="resource" value="#{stepExecutionContext['resource']}"/>
	        <property name="startAt" value="#{stepExecutionContext['startAt']}"/>
	        <property name="maxItemCount" value="#{stepExecutionContext['itemsCount']}"/>
		</bean>

	<bean id="dbReaders"
		class="org.springframework.batch.item.database.JdbcCursorItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="sql"
			value="select ID,PAYEE as sourceAccountNo, RECIPIENT as destinationAccountNo, AMOUNT, PAY_DATE from test.payments" />
		<property name="rowMapper">
			<bean
				class="org.springframework.batch.integration.samples.payments.PaymentRowMapper" />
		</property>
	</bean>

	<bean id="xmlWriters" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource"
			value="file:src/main/resources/data/paymentExport_XML/payment.xml" />
		<property name="marshaller" ref="paymentMarshaller" />
		<property name="rootTagName" value="payment" />
	</bean>

	<bean id="paymentMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<value>org.springframework.batch.integration.samples.payments.model.Payment
			</value>
		</property>
	</bean>

</beans>
